from typing import Callable
from unittest.mock import AsyncMock, MagicMock, patch

from pybotx import (
    Bot,
    BubbleMarkup,
    Button,
    IncomingMessage,
    KeyboardMarkup,
    OutgoingMessage,
)
from pybotx.models.attachments import AttachmentDocument
from pybotx_fsm import FSM

from app.bot.states.support_request import UpdateSupportRequestStates
from app.schemas.support_request import (
    SupportRequestInCreation,
    SupportRequestInUpdating,
)


async def test__update_support_request_handler(
    bot: Bot,
    incoming_message_factory: Callable[..., IncomingMessage],
    fsm_session: FSM,
    default_string: str,
) -> None:
    # - Arrange -
    message = incoming_message_factory(
        body="/update-request",
        data={
            "support_request": {
                "subject": default_string,
                "description": default_string,
                "attachments_names": [],
            }
        },
    )

    # - Act -
    await bot.async_execute_bot_command(message)

    # - Assert -
    assert await fsm_session.get_state() == UpdateSupportRequestStates.SELECT_ATTRIBUTE
    bot.send.assert_awaited_once_with(  # type: ignore
        message=OutgoingMessage(
            bot_id=message.bot.id,
            chat_id=message.chat.id,
            body="–ö–∞–∫–æ–µ –ø–æ–ª–µ –≤ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –í—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å?",
            bubbles=BubbleMarkup(
                [
                    [Button(command="/update-description", label="–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã")],
                    [Button(command="/update-attachment", label="–§–∞–π–ª—ã")],
                ]
            ),
            keyboard=KeyboardMarkup([[Button(command="/cancel", label="–û–¢–ú–ï–ù–ê")]]),
        ),
    )


async def test__select_updating_attribute_handler__empty_message(
    bot: Bot,
    incoming_message_factory: Callable[..., IncomingMessage],
    fsm_session: FSM,
    default_string: str,
) -> None:
    # - Arrange -
    message = incoming_message_factory(body="")
    await fsm_session.change_state(
        state=UpdateSupportRequestStates.SELECT_ATTRIBUTE,
        support_request=SupportRequestInUpdating(
            subject=default_string,
            description=default_string,
        ),
    )
    # - Act -
    await bot.async_execute_bot_command(message)

    # - Assert -
    assert await fsm_session.get_state() == UpdateSupportRequestStates.SELECT_ATTRIBUTE
    assert message.state.fsm_storage.support_request.description == default_string
    bot.send.assert_awaited_once_with(  # type: ignore
        message=OutgoingMessage(
            bot_id=message.bot.id,
            chat_id=message.chat.id,
            body="–ö–∞–∫–æ–µ –ø–æ–ª–µ –≤ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –í—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å?",
            bubbles=BubbleMarkup(
                [
                    [Button(command="/update-description", label="–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã")],
                    [Button(command="/update-attachment", label="–§–∞–π–ª—ã")],
                ]
            ),
            keyboard=KeyboardMarkup([[Button(command="/cancel", label="–û–¢–ú–ï–ù–ê")]]),
        ),
    )


async def test__select_updating_attribute_handler__update_description_command(
    bot: Bot,
    incoming_message_factory: Callable[..., IncomingMessage],
    fsm_session: FSM,
    default_string: str,
) -> None:
    # - Arrange -
    message = incoming_message_factory(body="/update-description")
    await fsm_session.change_state(
        state=UpdateSupportRequestStates.SELECT_ATTRIBUTE,
        support_request=SupportRequestInUpdating(
            subject=default_string,
            description=default_string,
        ),
    )
    # - Act -
    await bot.async_execute_bot_command(message)

    # - Assert -
    assert (
        await fsm_session.get_state()
        == UpdateSupportRequestStates.ENTER_NEW_DESCRIPTION  # noqa: W503
    )
    assert message.state.fsm_storage.support_request.description == default_string
    bot.send.assert_awaited_once_with(  # type: ignore
        message=OutgoingMessage(
            bot_id=message.bot.id,
            chat_id=message.chat.id,
            body=(
                "‚ùó –û–ø–∏—à–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–æ –≤–æ–∑–Ω–∏–∫—à—É—é –ø—Ä–æ–±–ª–µ–º—É, —É–∫–∞–∂–∏—Ç–µ –∫–∞–∫–∏–µ –¥–µ–π—Å—Ç–≤–∏—è "
                "–í—ã –≤—ã–ø–æ–ª–Ω—è–µ—Ç–µ –∏ –∫–∞–∫–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–ª—É—á–∞–µ—Ç–µ.\n\n"
                "‚ö° –û—Ç –ø–æ–ª–Ω–æ—Ç—ã –æ–ø–∏—Å–∞–Ω–∏—è –±—É–¥–µ—Ç –∑–∞–≤–∏—Å–µ—Ç—å —Å–∫–æ—Ä–æ—Å—Ç—å "
                "—Ä–µ—à–µ–Ω–∏—è –í–∞—à–µ–≥–æ –æ–±—Ä–∞—â–µ–Ω–∏—è.\n\nüì± –û–±—Ä–∞—â–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ "
                "—Å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞, –≥–¥–µ –≤–æ–∑–Ω–∏–∫–ª–∞ –ø—Ä–æ–±–ª–µ–º–∞."
            ),
            keyboard=KeyboardMarkup([[Button(command="/cancel", label="–û–¢–ú–ï–ù–ê")]]),
        ),
    )


async def test__select_updating_attribute_handler__update_attachment_command(
    bot: Bot,
    incoming_message_factory: Callable[..., IncomingMessage],
    fsm_session: FSM,
    default_string: str,
) -> None:
    # - Arrange -
    message = incoming_message_factory(body="/update-attachment")
    await fsm_session.change_state(
        state=UpdateSupportRequestStates.SELECT_ATTRIBUTE,
        support_request=SupportRequestInUpdating(
            subject=default_string,
            description=default_string,
        ),
    )
    # - Act -
    await bot.async_execute_bot_command(message)

    # - Assert -
    assert (
        await fsm_session.get_state() == UpdateSupportRequestStates.ADD_NEW_ATTACHMENT
    )
    assert message.state.fsm_storage.support_request.description == default_string
    bot.send.assert_awaited_once_with(  # type: ignore
        message=OutgoingMessage(
            bot_id=message.bot.id,
            chat_id=message.chat.id,
            body=(
                "**–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –∏–ª–∏ –º–µ–¥–∏–∞—Ñ–∞–π–ª (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ).**"
                "\n\n–í—ã –º–æ–∂–µ—Ç–µ –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–æ 20 —Ñ–∞–π–ª–æ–≤, —Ä–∞–∑–º–µ—Ä–æ–º –Ω–µ "
                "–±–æ–ª–µ–µ 9.9 –ú–ë –∫–∞–∂–¥—ã–π –∏ –Ω–µ –±–æ–ª–µ–µ 20.0 –ú–ë "
                "—Å—É–º–º–∞—Ä–Ω–æ.\n\n–ü–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã –±—É–¥—É—Ç "
                '–∑–∞–≥—Ä—É–∂–µ–Ω—ã, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "**–û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ**" '
                "–ø–æ–¥ –ø–æ–ª–µ–º –¥–ª—è –≤–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π."
            ),
            bubbles=BubbleMarkup([[Button(command="/skip", label="–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å")]]),
            keyboard=KeyboardMarkup([[Button(command="/cancel", label="–û–¢–ú–ï–ù–ê")]]),
        ),
    )


async def test__select_updating_attribute_handler__text_instead_command(
    bot: Bot,
    incoming_message_factory: Callable[..., IncomingMessage],
    fsm_session: FSM,
    default_string: str,
) -> None:
    # - Arrange -
    message = incoming_message_factory(body=default_string)
    await fsm_session.change_state(
        state=UpdateSupportRequestStates.SELECT_ATTRIBUTE,
        support_request=SupportRequestInUpdating(
            subject=default_string,
            description=default_string,
        ),
    )
    # - Act -
    await bot.async_execute_bot_command(message)

    # - Assert -
    assert await fsm_session.get_state() == UpdateSupportRequestStates.SELECT_ATTRIBUTE
    assert message.state.fsm_storage.support_request.description == default_string
    bot.send.assert_awaited_once_with(  # type: ignore
        message=OutgoingMessage(
            bot_id=message.bot.id,
            chat_id=message.chat.id,
            body="–ö–∞–∫–æ–µ –ø–æ–ª–µ –≤ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –í—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å?",
            bubbles=BubbleMarkup(
                [
                    [Button(command="/update-description", label="–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã")],
                    [Button(command="/update-attachment", label="–§–∞–π–ª—ã")],
                ]
            ),
            keyboard=KeyboardMarkup([[Button(command="/cancel", label="–û–¢–ú–ï–ù–ê")]]),
        ),
    )


async def test__enter_new_description_handler__empty_message(
    bot: Bot,
    incoming_message_factory: Callable[..., IncomingMessage],
    fsm_session: FSM,
    default_string: str,
) -> None:
    # - Arrange -
    message = incoming_message_factory(body="")
    await fsm_session.change_state(
        state=UpdateSupportRequestStates.ENTER_NEW_DESCRIPTION,
        support_request=SupportRequestInUpdating(
            subject=default_string,
            description=default_string,
        ),
    )
    # - Act -
    await bot.async_execute_bot_command(message)

    # - Assert -
    assert (
        await fsm_session.get_state()
        == UpdateSupportRequestStates.ENTER_NEW_DESCRIPTION  # noqa: W503
    )
    assert message.state.fsm_storage.support_request.description == default_string
    bot.send.assert_awaited_once_with(  # type: ignore
        message=OutgoingMessage(
            bot_id=message.bot.id,
            chat_id=message.chat.id,
            body=(
                "‚ùó –û–ø–∏—à–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–æ –≤–æ–∑–Ω–∏–∫—à—É—é –ø—Ä–æ–±–ª–µ–º—É, —É–∫–∞–∂–∏—Ç–µ –∫–∞–∫–∏–µ –¥–µ–π—Å—Ç–≤–∏—è "
                "–í—ã –≤—ã–ø–æ–ª–Ω—è–µ—Ç–µ –∏ –∫–∞–∫–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–ª—É—á–∞–µ—Ç–µ.\n\n"
                "‚ö° –û—Ç –ø–æ–ª–Ω–æ—Ç—ã –æ–ø–∏—Å–∞–Ω–∏—è –±—É–¥–µ—Ç –∑–∞–≤–∏—Å–µ—Ç—å —Å–∫–æ—Ä–æ—Å—Ç—å "
                "—Ä–µ—à–µ–Ω–∏—è –í–∞—à–µ–≥–æ –æ–±—Ä–∞—â–µ–Ω–∏—è.\n\nüì± –û–±—Ä–∞—â–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ "
                "—Å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞, –≥–¥–µ –≤–æ–∑–Ω–∏–∫–ª–∞ –ø—Ä–æ–±–ª–µ–º–∞."
            ),
            keyboard=KeyboardMarkup([[Button(command="/cancel", label="–û–¢–ú–ï–ù–ê")]]),
        ),
    )


@patch("app.bot.commands.support_request.create.settings.MAX_DESCRIPTION_LENGTH", new=5)
async def test__enter_new_description_handler__max_description_length_exceeded(
    bot: Bot,
    incoming_message_factory: Callable[..., IncomingMessage],
    fsm_session: FSM,
    default_string: str,
) -> None:
    # - Arrange -
    message = incoming_message_factory(body=default_string)
    await fsm_session.change_state(
        state=UpdateSupportRequestStates.ENTER_NEW_DESCRIPTION,
        support_request=SupportRequestInUpdating(
            subject=default_string,
            description=default_string,
        ),
    )
    # - Act -
    await bot.async_execute_bot_command(message)

    # - Assert -
    assert (
        await fsm_session.get_state()
        == UpdateSupportRequestStates.ENTER_NEW_DESCRIPTION  # noqa: W503
    )
    assert message.state.fsm_storage.support_request.description == default_string
    bot.send.assert_awaited_once_with(  # type: ignore
        message=OutgoingMessage(
            bot_id=message.bot.id,
            chat_id=message.chat.id,
            body=(
                "–í—ã –≤–≤–µ–ª–∏ –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤. –ú–∞–∫—Å–∏–º—É–º - 5 —Å–∏–º–≤–æ–ª–æ–≤.\n"
                "**–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–∫—Ä–∞—Ç–∏—Ç–µ —Ç–µ–∫—Å—Ç –≤–∞—à–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∑–∞–Ω–æ–≤–æ:**"
            ),
            keyboard=KeyboardMarkup([[Button(command="/cancel", label="–û–¢–ú–ï–ù–ê")]]),
        ),
    )


async def test__enter_new_description_handler(
    bot: Bot,
    incoming_message_factory: Callable[..., IncomingMessage],
    fsm_session: FSM,
    default_string: str,
) -> None:
    # - Arrange -
    message = incoming_message_factory(body=default_string)
    await fsm_session.change_state(
        state=UpdateSupportRequestStates.ENTER_NEW_DESCRIPTION,
        support_request=SupportRequestInUpdating(
            subject=default_string,
            description=default_string,
        ),
    )
    # - Act -
    await bot.async_execute_bot_command(message)

    # - Assert -
    assert await fsm_session.get_state() is None
    assert message.state.fsm_storage.support_request.description == default_string
    bot.send.assert_awaited_once_with(  # type: ignore
        message=OutgoingMessage(
            bot_id=message.bot.id,
            chat_id=message.chat.id,
            body=(
                "**–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–æ–¥–∞:**\n"
                "**–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã:** lorem ipsum\n"
                "**–ü—Ä–∏–ª–æ–∂–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:** -\n"
                "**–í—Å—ë –≤–µ—Ä–Ω–æ?**"
            ),
            bubbles=BubbleMarkup(
                [
                    [Button(command="/confirm-request", label="–î–∞")],
                    [
                        Button(
                            command="/update-request",
                            label="–ù–µ—Ç",
                            data={
                                "support_request": SupportRequestInCreation(
                                    subject=default_string,
                                    description=default_string,
                                    attachments_names=[],
                                )
                            },
                        )
                    ],
                ]
            ),
            keyboard=KeyboardMarkup([[Button(command="/cancel", label="–û–¢–ú–ï–ù–ê")]]),
        )
    )


@patch(
    "app.bot.commands.support_request.update.ServiceDeskRepo.delete_user_attachments",
    new_callable=AsyncMock,
)
async def test__add_attachment_handler__text_instead_attachment(
    mocked_delete_user_attachments: AsyncMock,
    bot: Bot,
    incoming_message_factory: Callable[..., IncomingMessage],
    fsm_session: FSM,
    default_string: str,
) -> None:
    # - Arrange -
    message = incoming_message_factory(body="")
    support_request = SupportRequestInCreation(description=default_string)
    await fsm_session.change_state(
        state=UpdateSupportRequestStates.ADD_NEW_ATTACHMENT,
        support_request=support_request,
    )

    # - Act -
    await bot.async_execute_bot_command(message)

    # - Assert -
    assert mocked_delete_user_attachments.call_count == 1
    assert (
        await fsm_session.get_state() == UpdateSupportRequestStates.ADD_NEW_ATTACHMENT
    )
    assert message.state.fsm_storage.support_request.description == default_string
    assert not message.state.fsm_storage.support_request.attachments_names
    bot.send.assert_awaited_once_with(  # type: ignore
        message=OutgoingMessage(
            bot_id=message.bot.id,
            chat_id=message.chat.id,
            body=(
                "–ù–∞ –¥–∞–Ω–Ω–æ–º —ç—Ç–∞–ø–µ –≤—ã –º–æ–∂–µ—Ç–µ –ª–∏–±–æ –¥–æ–±–∞–≤–∏—Ç—å —Ñ–∞–π–ª—ã, –ª–∏–±–æ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å "
                "–¥–∞–Ω–Ω—ã–π —à–∞–≥.\n–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Ç–µ–º—É –∏–ª–∏ –æ–ø–∏—Å–∞–Ω–∏–µ –æ–±—Ä–∞—â–µ–Ω–∏—è, "
                '–Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–û—Ç–º–µ–Ω–∞" –∏ –æ—Ñ–æ—Ä–º–∏—Ç–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –∑–∞–Ω–æ–≤–æ.'
            ),
            bubbles=BubbleMarkup([[Button(command="/skip", label="–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å")]]),
            keyboard=KeyboardMarkup([[Button(command="/cancel", label="–û–¢–ú–ï–ù–ê")]]),
        ),
    )


@patch(
    "app.bot.commands.support_request.update.ServiceDeskRepo.delete_user_attachments",
    new_callable=AsyncMock,
)
@patch(
    "app.bot.commands.support_request.update.ServiceDeskRepo.is_valid_attachment",
    return_value=False,
)
async def test__add_attachment_handler__invalid_attachment(
    mocked_is_valid_attachment: MagicMock,
    mocked_delete_user_attachments: AsyncMock,
    bot: Bot,
    incoming_message_factory: Callable[..., IncomingMessage],
    incoming_attachment: AttachmentDocument,
    fsm_session: FSM,
    default_string: str,
) -> None:
    # - Arrange -
    message = incoming_message_factory(body="", file=incoming_attachment)
    support_request = SupportRequestInCreation(description=default_string)
    await fsm_session.change_state(
        state=UpdateSupportRequestStates.ADD_NEW_ATTACHMENT,
        support_request=support_request,
    )

    # - Act -
    await bot.async_execute_bot_command(message)

    # - Assert -
    assert mocked_delete_user_attachments.call_count == 1
    assert mocked_is_valid_attachment.call_count == 1
    assert (
        await fsm_session.get_state() == UpdateSupportRequestStates.ADD_NEW_ATTACHMENT
    )
    assert message.state.fsm_storage.support_request.description == default_string
    assert not message.state.fsm_storage.support_request.attachments_names
    bot.send.assert_awaited_once_with(  # type: ignore
        message=OutgoingMessage(
            bot_id=message.bot.id,
            chat_id=message.chat.id,
            body=(
                "–í—ã –ø—ã—Ç–∞–µ—Ç–µ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª(—ã) —Ä–∞–∑–º–µ—Ä –∏–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ—Ç–æ—Ä—ã—Ö "
                "–ø—Ä–µ–≤—ã—à–∞–µ—Ç –¥–æ–ø—É—Å—Ç–∏–º–æ–µ.\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–º–µ–Ω—å—à–∏—Ç–µ —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞(–æ–≤) "
                "–∏ –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Å–Ω–æ–≤–∞.\n–¢–∞–∫–∂–µ –í—ã –º–æ–∂–µ—Ç–µ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É **¬´–û—Ç–º–µ–Ω–∞¬ª** "
                "–¥–ª—è –æ—Ç–º–µ–Ω—ã –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –æ–±—Ä–∞—â–µ–Ω–∏—è –∏–ª–∏ **¬´–û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ¬ª** "
                "–¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∑–∞–ø—Ä–æ—Å–∞ –±–µ–∑ —Ñ–∞–π–ª–æ–≤."
            ),
            keyboard=KeyboardMarkup(
                [
                    [Button(command="/confirm-request", label="–û–¢–ü–†–ê–í–ò–¢–¨ –û–ë–†–ê–©–ï–ù–ò–ï")],
                    [Button(command="/cancel", label="–û–¢–ú–ï–ù–ê")],
                ]
            ),
        ),
    )


@patch(
    "app.bot.commands.support_request.update.ServiceDeskRepo.delete_user_attachments",
    new_callable=AsyncMock,
)
@patch(
    "app.bot.commands.support_request.update.ServiceDeskRepo.get_user_attachments_names"
)
@patch("app.bot.commands.support_request.update.ServiceDeskRepo.add_user_attachment")
@patch(
    "app.bot.commands.support_request.update.ServiceDeskRepo.is_valid_attachment",
    return_value=True,
)
async def test__add_attachment_handler__valid_attachment(  # noqa: WPS218
    mocked_is_valid_attachment: MagicMock,
    mocked_add_user_attachment: MagicMock,
    mocked_get_user_attachments_names: MagicMock,
    mocked_delete_user_attachments: AsyncMock,
    bot: Bot,
    incoming_message_factory: Callable[..., IncomingMessage],
    incoming_attachment: AttachmentDocument,
    fsm_session: FSM,
    default_string: str,
    default_list: list[str],
) -> None:
    # - Arrange -
    message = incoming_message_factory(body="", file=incoming_attachment)
    support_request = SupportRequestInCreation(description=default_string)
    mocked_get_user_attachments_names.return_value = default_list
    await fsm_session.change_state(
        state=UpdateSupportRequestStates.ADD_NEW_ATTACHMENT,
        support_request=support_request,
    )

    # - Act -
    await bot.async_execute_bot_command(message)

    # - Assert -
    assert mocked_delete_user_attachments.call_count == 1
    assert mocked_is_valid_attachment.call_count == 1
    assert mocked_add_user_attachment.call_count == 1
    assert mocked_get_user_attachments_names.call_count == 1
    assert (
        await fsm_session.get_state() == UpdateSupportRequestStates.ADD_NEW_ATTACHMENT
    )
    assert message.state.fsm_storage.support_request.description == default_string
    assert message.state.fsm_storage.support_request.attachments_names == default_list
    bot.send.assert_awaited_once_with(  # type: ignore
        message=OutgoingMessage(
            bot_id=message.bot.id,
            chat_id=message.chat.id,
            body=(
                "**–ü—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª(—ã):**\n"
                "lorem ipsum\n"
                "dolor sit amet\n\n"
                "–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –í–∞–º–∏ —Ñ–∞–π–ª—ã –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –≤ —á–∞—Ç–µ. "
                "–ï—Å–ª–∏ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "
                "**–û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ** –ø–æ–¥ –ø–æ–ª–µ–º –¥–ª—è –≤–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π. "
                "–ï—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–æ–±–∞–≤–∏—Ç—å –≤–ª–æ–∂–µ–Ω–∏—è ‚Äî –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –∏—Ö."
            ),
            bubbles=BubbleMarkup(
                [[Button(command="/confirm-request", label="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ")]]
            ),
            keyboard=KeyboardMarkup([[Button(command="/cancel", label="–û–¢–ú–ï–ù–ê")]]),
        ),
    )


@patch(
    "app.bot.commands.support_request.update.ServiceDeskRepo.delete_user_attachments",
    new_callable=AsyncMock,
)
async def test__add_attachment_handler__skip_command(
    mocked_delete_user_attachments: AsyncMock,
    bot: Bot,
    incoming_message_factory: Callable[..., IncomingMessage],
    fsm_session: FSM,
    default_string: str,
) -> None:
    # - Arrange -
    message = incoming_message_factory(body="/skip")
    support_request = SupportRequestInCreation(description=default_string)
    await fsm_session.change_state(
        state=UpdateSupportRequestStates.ADD_NEW_ATTACHMENT,
        support_request=support_request,
    )

    # - Act -
    await bot.async_execute_bot_command(message)

    # - Assert -
    assert mocked_delete_user_attachments.call_count == 2
    assert await fsm_session.get_state() is None
    assert message.state.fsm_storage.support_request.description == default_string
    assert not message.state.fsm_storage.support_request.attachments_names
    bot.send.assert_awaited_once_with(  # type: ignore
        message=OutgoingMessage(
            bot_id=message.bot.id,
            chat_id=message.chat.id,
            body=(
                "**–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–æ–¥–∞:**\n"
                "**–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã:** lorem ipsum\n"
                "**–ü—Ä–∏–ª–æ–∂–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:** -\n"
                "**–í—Å—ë –≤–µ—Ä–Ω–æ?**"
            ),
            bubbles=BubbleMarkup(
                [
                    [Button(command="/confirm-request", label="–î–∞")],
                    [
                        Button(
                            command="/update-request",
                            label="–ù–µ—Ç",
                            data={
                                "support_request": SupportRequestInCreation(
                                    subject=None,
                                    description=default_string,
                                    attachments_names=[],
                                )
                            },
                        )
                    ],
                ]
            ),
            keyboard=KeyboardMarkup([[Button(command="/cancel", label="–û–¢–ú–ï–ù–ê")]]),
        ),
    )


@patch(
    "app.bot.commands.support_request.update.ServiceDeskRepo.delete_user_attachments",
    new_callable=AsyncMock,
)
@patch(
    "app.bot.commands.support_request.update.ServiceDeskRepo.get_user_attachments_names"
)
async def test__add_attachment_handler__confirm_request_command(
    mocked_get_user_attachments_names: MagicMock,
    mocked_delete_user_attachments: AsyncMock,
    bot: Bot,
    incoming_message_factory: Callable[..., IncomingMessage],
    fsm_session: FSM,
    default_string: str,
    default_list: list[str],
) -> None:
    # - Arrange -
    message = incoming_message_factory(body="/confirm-request")
    support_request = SupportRequestInCreation(
        description=default_string, attachments_names=default_list
    )
    mocked_get_user_attachments_names.return_value = default_list
    await fsm_session.change_state(
        state=UpdateSupportRequestStates.ADD_NEW_ATTACHMENT,
        support_request=support_request,
    )

    # - Act -
    await bot.async_execute_bot_command(message)

    # - Assert -
    assert mocked_get_user_attachments_names.call_count == 1
    assert mocked_delete_user_attachments.call_count == 1
    assert await fsm_session.get_state() is None
    assert message.state.fsm_storage.support_request.description == default_string
    assert message.state.fsm_storage.support_request.attachments_names == default_list
    bot.send.assert_awaited_once_with(  # type: ignore
        message=OutgoingMessage(
            bot_id=message.bot.id,
            chat_id=message.chat.id,
            body=(
                "**–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–æ–¥–∞:**\n"
                "**–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã:** lorem ipsum\n"
                "**–ü—Ä–∏–ª–æ–∂–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:** dolor sit amet, lorem ipsum\n"
                "**–í—Å—ë –≤–µ—Ä–Ω–æ?**"
            ),
            bubbles=BubbleMarkup(
                [
                    [Button(command="/confirm-request", label="–î–∞")],
                    [
                        Button(
                            command="/update-request",
                            label="–ù–µ—Ç",
                            data={
                                "support_request": SupportRequestInCreation(
                                    subject=None,
                                    description=default_string,
                                    attachments_names=default_list,
                                )
                            },
                        )
                    ],
                ]
            ),
            keyboard=KeyboardMarkup([[Button(command="/cancel", label="–û–¢–ú–ï–ù–ê")]]),
        ),
    )
